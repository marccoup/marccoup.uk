#!/usr/bin/env php
<?php

use MatthiasMullie\Minify\CSS;

include __DIR__.'/vendor/autoload.php';

function resetBuild(): void
{
    $dir = __DIR__;

    exec("rm -rf {$dir}/public");
}

function assets(): void
{
    mkdir('public/assets', 0755, true);

    assetGroup('css');
    assetGroup('images');
}

function assetGroup(string $group): void
{
    $source = __DIR__."/resources/{$group}";
    $dest   = __DIR__."/public/assets/{$group}";

    $iterator = new RecursiveIteratorIterator(
        new RecursiveDirectoryIterator($source, RecursiveDirectoryIterator::SKIP_DOTS),
        RecursiveIteratorIterator::SELF_FIRST
    );

    /** @var SplFileInfo $item */
    foreach ($iterator as $item) {
        $filePath = str_replace($source, $dest, $item->getPathname());

        if (!$item->isDir()) {
            $dir = dirname($filePath);

            if (!file_exists($dir)) {
                mkdir($dir, 0755, true);
            }

            if (pathinfo($filePath, PATHINFO_EXTENSION) === 'css') {
                new CSS(file_get_contents($item->getPathname()))->minify($filePath);
            } else {
                copy($item, $filePath);
            }
        }
    }
}

function articles(): array
{
    // Get all Markdown files in the content/articles directory
    $articleFiles = glob('content/articles/*.md');

    // Array to store all article metadata
    $allArticles = [];

    // Process each article file
    foreach ($articleFiles as $articleFile) {
        // Get the filename without extension for output HTML file
        $baseFilename = basename($articleFile, '.md');

        // Read the Markdown content
        $markdown = file_get_contents($articleFile);

        // Create a new environment with front matter extension
        $environment = new League\CommonMark\Environment\Environment([
            'html_input'         => 'allow',
            'allow_unsafe_links' => false,
        ]);

        // Configure the environment with extensions
        $environment->addExtension(new League\CommonMark\Extension\CommonMark\CommonMarkCoreExtension());
        $environment->addExtension(new League\CommonMark\Extension\FrontMatter\FrontMatterExtension());

        // Create the converter
        $converter = new League\CommonMark\MarkdownConverter($environment);

        // Convert the Markdown to HTML and get front matter
        $result      = $converter->convert($markdown);
        $frontMatter = $result->getFrontMatter() ?? [];
        $htmlContent = $result->getContent();

        // Set variables for the view
        $title     = $frontMatter['title'] ?? $baseFilename;
        $author    = $frontMatter['author'] ?? 'Unknown';
        $date      = $frontMatter['date'] ?? '';
        $updatedAt = $frontMatter['updated_at'] ?? '';
        $content   = $htmlContent;

        // Extract a short excerpt from the HTML content
        $excerpt = '';
        if (preg_match('/<p>(.*?)<\/p>/', $htmlContent, $matches)) {
            $excerpt = strip_tags($matches[1]);
            if (strlen($excerpt) > 150) {
                $excerpt = substr($excerpt, 0, 147).'...';
            }
        }

        // Add article metadata to the array
        $allArticles[] = [
            'title'      => $title,
            'author'     => $author,
            'date'       => $date,
            'updated_at' => $updatedAt,
            'slug'       => $baseFilename,
            'excerpt'    => $excerpt,
        ];

        ob_start();
        include __DIR__.'/resources/views/articles/article.php';
        $content = ob_get_clean();

        // Capture the output of the template
        ob_start();
        include __DIR__.'/resources/views/layout.php';
        $html = ob_get_clean();

        // Create the dir
        mkdir("public/articles/{$baseFilename}", 0755, true);
        // Write the HTML to the output file
        file_put_contents("public/articles/{$baseFilename}/index.html", $html);
    }

    // Sort articles by date (newest first)
    usort($allArticles, function ($a, $b) {
        return strtotime($b['date']) <=> strtotime($a['date']);
    });

    // Return the article metadata for use elsewhere
    return $allArticles;
}

function homepage(array $allArticles): void
{
    // Generate the home page
    ob_start();
    include __DIR__.'/resources/views/home.php';
    $content = ob_get_clean();

    // Capture the output of the template
    ob_start();
    $title = 'Home';
    include __DIR__.'/resources/views/layout.php';
    $html = ob_get_clean();

    // Write the HTML to the output file
    file_put_contents('public/index.html', $html);
}

resetBuild();
assets();
$allArticles = articles();
homepage($allArticles);